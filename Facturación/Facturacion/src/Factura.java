
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jdk.nashorn.internal.parser.TokenType;
import logica.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author willi
 */
public class Factura extends javax.swing.JFrame {
    
    DefaultTableModel tablita = new DefaultTableModel();
    
    NegociosFac f1= new NegociosFac();
    ArrayList CodProductos = new ArrayList();

            
    /**
     * Creates new form Factura
     */
    public Factura() {
        initComponents();
        txtNombreClie.setEnabled(false);
        txtNombreProduc.setEnabled(false);
        txtNombreVendedor.setEnabled(false);
        txtPrecio.setEnabled(false);
        txtUnidades.setEnabled(false);
        txtNoFactura.setEnabled(false);
        txtCantidades.setEnabled(false);
        btnBuscarVen.setEnabled(false);
        btnBuscarProd.setEnabled(false);
        btnGuardarFac.setEnabled(false);
        btnBuscarFac.setEnabled(false);
        btnAgregarProd.setEnabled(false);
        txtVendedor.setEnabled(false);
        txtProducto.setEnabled(false);
        tablita.addColumn("Codigo");
        tablita.addColumn("Nombre");
        tablita.addColumn("P/Unitario");
        tablita.addColumn("Cantidad");
        tablita.addColumn("Costo");

        TablaDetalle.setModel(tablita);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        txtVendedor = new javax.swing.JTextField();
        btnBuscarClie = new javax.swing.JButton();
        btnBuscarVen = new javax.swing.JButton();
        txtNombreClie = new javax.swing.JTextField();
        txtNombreVendedor = new javax.swing.JTextField();
        btnBuscarFac = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNoFactura = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        btnBuscarProd = new javax.swing.JButton();
        txtNombreProduc = new javax.swing.JTextField();
        txtUnidades = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtCantidades = new javax.swing.JTextField();
        btnAgregarProd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDetalle = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        lblIVA = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnGuardarFac = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Factura PROG3 ");

        jLabel1.setText("Codigo Cliente:");

        jLabel2.setText("Codigo Vendedor:");

        btnBuscarClie.setText("Buscar");
        btnBuscarClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClieActionPerformed(evt);
            }
        });

        btnBuscarVen.setText("Buscar");
        btnBuscarVen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVenActionPerformed(evt);
            }
        });

        btnBuscarFac.setText("Buscar");
        btnBuscarFac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFacActionPerformed(evt);
            }
        });

        jLabel3.setText("NO.factura");

        jLabel4.setText("Codigo De Producto:");

        btnBuscarProd.setText("Buscar");
        btnBuscarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdActionPerformed(evt);
            }
        });

        btnAgregarProd.setText("Agregar");
        btnAgregarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProdActionPerformed(evt);
            }
        });

        TablaDetalle = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex)
            {
                return false;
            }
        };
        TablaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaDetalle.setFocusable(false);
        TablaDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDetalleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaDetalle);

        jLabel5.setText("SUBTOTAL $:");

        jLabel6.setText("IVA $:");

        jLabel7.setText("TOTAL $:");

        jLabel11.setText("Unidades");

        jLabel12.setText("P/U");

        jLabel13.setText("Cantidad");

        jLabel14.setText("Nombre");

        btnGuardarFac.setText("Guardar");
        btnGuardarFac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarFacActionPerformed(evt);
            }
        });

        jLabel8.setText("Nombre:");

        jLabel9.setText("Nombre:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Detalle Del Producto a Comprar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtVendedor)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(txtCliente))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarClie)
                            .addComponent(btnBuscarVen))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNombreClie)
                                        .addComponent(txtNombreVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnBuscarFac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnGuardarFac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtNoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscarProd))
                                    .addComponent(jLabel4))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreProduc, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(txtCantidades, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblIVA, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(lblSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(19, 19, 19)))
                        .addGap(27, 27, 27)
                        .addComponent(btnAgregarProd)
                        .addGap(0, 116, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtNoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarClie)
                            .addComponent(txtNombreClie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnGuardarFac)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnBuscarFac)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarVen)
                    .addComponent(txtNombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProd)
                    .addComponent(txtNombreProduc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarProd))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(lblIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClieActionPerformed
        // TODO add your handling code here:
        String CodClie = txtCliente.getText().toString();
        if (CodClie.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar un codigo de cliente");
        }else{
            if(f1.getCliente(CodClie).isEmpty())
            {
                JOptionPane.showMessageDialog(rootPane, "El codigo de cliente ingresado No Existe....");
            }
            else
            {
                
                txtNombreClie.setText(f1.getCliente(CodClie).toString());
                btnBuscarVen.setEnabled(true);
                txtVendedor.setEnabled(true);
                btnBuscarVen.requestFocus();
                txtVendedor.requestFocus();
                 tablita.setRowCount(0);
                lblIVA.setText("");
                lblSubtotal.setText("");
                lblTotal.setText("");
                
                
                
            }
        }
    }//GEN-LAST:event_btnBuscarClieActionPerformed

    private void btnBuscarVenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVenActionPerformed
        // TODO add your handling code here:
        String CodVen = txtVendedor.getText().toString();
        if (CodVen.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar un codigo de vendedor");
        }else{
            if(f1.getVendedor(CodVen).isEmpty())
            {
                JOptionPane.showMessageDialog(rootPane, "El codigo de vendedor ingresado No Existe....");
            }
            else
            {
                txtNombreVendedor.setText(f1.getVendedor(CodVen).toString());
                txtProducto.setEnabled(true);
                btnBuscarProd.setEnabled(true);
                btnBuscarProd.requestFocus();
                txtProducto.requestFocus();
            }
            
        }
    }//GEN-LAST:event_btnBuscarVenActionPerformed

    private void btnBuscarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdActionPerformed
        // TODO add your handling code here:
        String CodProd = txtProducto.getText().toString();
        if (CodProd.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar un codigo de producto");
        }else{
            if(f1.getProducto(CodProd).isEmpty())
            {
                JOptionPane.showMessageDialog(rootPane, "El codigo de Producto ingresado No Existe....");
            }
            else
            {
                String infoPro=f1.getProducto(CodProd.toString());
                String[] productos=infoPro.split(",");
                txtNombreProduc.setText(productos[0].toString());
                txtPrecio.setText(productos[1].toString());
                txtUnidades.setText(productos[2].toString());
                txtCantidades.setEnabled(true);
                btnAgregarProd.setEnabled(true);
                btnAgregarProd.requestFocus();
                txtCantidades.requestFocus();
            }
            
        }
    }//GEN-LAST:event_btnBuscarProdActionPerformed

    private void btnAgregarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProdActionPerformed
        // TODO add your handling code here:
        String Cant = txtCantidades.getText().toString();
        int Unidades= Integer.valueOf(txtUnidades.getText().toString());
        
        int Cantidad= Integer.valueOf(Cant);
        if (Cant.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar una cantidad de productos");
        }else{
            if(Cantidad>Unidades)
            {
                JOptionPane.showMessageDialog(rootPane, "Debe ingresar una cantidad menor o igual a la existencia del producto...");
            }
            else if(Cantidad<=0)
            {
                JOptionPane.showMessageDialog(rootPane, "Debe ingresar una cantidad Mayor a 0...");
            }
            else
            {
                
                String producto= txtNombreProduc.getText().toString();
                String codPro= txtProducto.getText().toString();
                               
               
               /* double subtotal=0;
                
                
                subtotal=(Cantidad*precioU);
                double iva= (subtotal*0.13);
                double total= iva+subtotal;
                suma=suma+subtotal;
                lblIVA.setText(String.valueOf((suma*0.13)));
                lblSubtotal.setText(String.valueOf(suma));
                lblTotal.setText(String.valueOf(suma+(suma*0.13)));
                
                */
                String precio=txtPrecio.getText().toString();
                double precioU= Double.valueOf(precio);
                int numFact=f1.cantidadFacturas();
                int nFactura= numFact+1;
                int can2=CodProductos.size();
                if(can2>0)
                {
                    if(CodProductos.contains(codPro))
                    {
                        for(int c=0;c<f1.cantidadDetalles();c++)
                        {
                            if(f1.getIdDetalleFact(c).equals(String.valueOf(nFactura))&&f1.getCodProdFact(c).equals(codPro))
                            {
                                //int i= CodProductos.indexOf(codPro);
                                f1.modcantProductoFact(c, Cantidad);
                                double prec=f1.getPrecioUnitarioFact(c);
                                double cost= prec*Cantidad;
                                f1.modCostoFact(c, cost);
                                JOptionPane.showMessageDialog(rootPane, "Cantidad del producto actualizada...");
                            }
                        }
                        
                         
                        
                       
                        
                    }
                    else
                    {
                        double cost= precioU*Cantidad;
                        f1.setIdDetalleFact(String.valueOf(nFactura));
                        f1.setCodProdFact(codPro);
                        CodProductos.add(codPro);
                        f1.setCantidadProdFact(Cantidad);
                        f1.setNombreProdFact(producto);
                        f1.setPrecioUnitarioFact(precioU);
                        f1.setCostoFact(cost);
                    }
                }
                
                if(can2==0)
                {
                    double cost= precioU*Cantidad;
                        f1.setIdDetalleFact(String.valueOf(nFactura));
                        f1.setCodProdFact(codPro);
                        CodProductos.add(codPro);
                        f1.setCantidadProdFact(Cantidad);
                        f1.setNombreProdFact(producto);
                        f1.setPrecioUnitarioFact(precioU);
                        f1.setCostoFact(cost);
                }
                
                int can=f1.cantidadDetalles();
                
                String Datos[]= new String[5];
                tablita.setRowCount(0);
                double suma=0;
                for(int i=0;i<can;i++)
                {
                     
                    //String hg=f1.getIdDetalleFact(i);
                    if(f1.getIdDetalleFact(i).equals(String.valueOf(nFactura)))
                    {
                        Datos[0]=f1.getCodProdFact(i);
                        Datos[1]=f1.getNombreProFact(i);
                        Datos[2]=String.valueOf(f1.getPrecioUnitarioFact(i));
                        Datos[3]=String.valueOf(f1.getCantProFact(i));
                        Datos[4]=String.valueOf(f1.getCostoFact(i));
                        
                        double cost=f1.getCostoFact(i);
                        suma=suma+cost;
                        lblIVA.setText(String.valueOf((suma*0.13)));
                        lblSubtotal.setText(String.valueOf(suma));
                        lblTotal.setText(String.valueOf(suma+(suma*0.13)));
                        
                        
                        
                        tablita.addRow(Datos);
                        TablaDetalle.setModel(tablita);
                        
                    }
                }
                
                
                btnGuardarFac.setEnabled(true);
                btnGuardarFac.requestFocus();
                btnBuscarFac.setEnabled(false);
                //this.agregarRegistro();
            }
            
        }
    }//GEN-LAST:event_btnAgregarProdActionPerformed

    private void btnGuardarFacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarFacActionPerformed
        // TODO add your handling code here:
        String CodClie = txtNombreVendedor.getText().toString();
        String CodVen = txtNombreVendedor.getText().toString();
        if (CodVen.isEmpty()||CodClie.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Debe de haber un codigo de cliente y de vendedor");
        }else{
            if(tablita.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(rootPane, "No se puede almacenar una factura sin productos agregados");
                 tablita.setRowCount(0);
                lblIVA.setText("");
                lblSubtotal.setText("");
                lblTotal.setText("");
            }
            else
            {
                CodProductos.clear();
                f1.setClienteFact(txtNombreClie.getText().toString());
                f1.setVendedorFact(txtNombreVendedor.getText().toString());
                double stotal= Double.parseDouble(lblSubtotal.getText().toString());
                f1.setSubTotal(stotal);
                int numFact=f1.cantidadFacturas();
                int nFactura= numFact+1;
                f1.setFacturas((nFactura));
                int ExistenciaPro=Integer.parseInt(txtUnidades.getText().toString());
                int ct= f1.cantidadDetalles();
                for(int i=0;i<ct;i++)
                {
                    if(f1.getIdDetalleFact(i).equals(String.valueOf(nFactura)))
                    {
                        int cantPrd=f1.getCantProFact(i);
                        String CodProd=f1.getCodProdFact(i);
                        String infoPro=f1.getProducto(CodProd.toString());
                        String[] productos=infoPro.split(",");
                        
                        int units=Integer.parseInt(productos[2].toString());
                        int idcant= f1.idExitenciaPro(units);
                        int newCant= ExistenciaPro-cantPrd;
                        f1.modExistenciaPro(idcant, newCant);
                    }
                }
                txtNoFactura.setText(String.valueOf(nFactura));
                
                tablita.setRowCount(0);
                lblIVA.setText("");
                lblSubtotal.setText("");
                lblTotal.setText("");
                txtCliente.setText("");
                txtNombreClie.setText("");
                txtNombreVendedor.setText("");
                txtVendedor.setText("");
                txtProducto.setText("");
                txtCantidades.setText("");
                txtPrecio.setText("");
                txtNombreProduc.setText("");
                txtUnidades.setText("");
                btnBuscarFac.setEnabled(true);
                txtCliente.requestFocus();
                btnAgregarProd.setEnabled(false);
                btnBuscarProd.setEnabled(false);
                txtCantidades.setEnabled(false);
                
                
                
            }
            
        }
    }//GEN-LAST:event_btnGuardarFacActionPerformed

    private void TablaDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDetalleMouseClicked
        
        int index= TablaDetalle.getSelectedRow();
        TableModel model= TablaDetalle.getModel();
        String codpro= model.getValueAt(index, 0).toString(); 
        int numFact=f1.cantidadFacturas();
        int nFactura= numFact+1;
                
        //int j=f1.
            for(int c=0;c<f1.cantidadDetalles();c++)
                        {
                            if(f1.getIdDetalleFact(c).equals(String.valueOf(nFactura))&&f1.getCodProdFact(c).equals(codpro))
                            {
                                //int i= CodProductos.indexOf(codPro);
                                f1.elminarCantProductoFact(c);
                                f1.elminarCodProdFact(c);
                                f1.elminarCostoFact(c);
                                f1.elminarDetalleFact(c);
                                f1.elminarNombreProFact(c);
                                f1.elminarPrecioUnitarioFact(c);
                                CodProductos.remove(c);
                                
                                JOptionPane.showMessageDialog(rootPane, "Producto: "+codpro+" A sido eliminado con exito del detalle");
                            }
                        }
        
        //*********************************************************
        int can=f1.cantidadDetalles();
        
                String Datos[]= new String[5];
                tablita.setRowCount(0);
                double suma=0;
                for(int i=0;i<can;i++)
                {
                     
                    //String hg=f1.getIdDetalleFact(i);
                    if(f1.getIdDetalleFact(i).equals(String.valueOf(nFactura)))
                    {
                        Datos[0]=f1.getCodProdFact(i);
                        Datos[1]=f1.getNombreProFact(i);
                        Datos[2]=String.valueOf(f1.getPrecioUnitarioFact(i));
                        Datos[3]=String.valueOf(f1.getCantProFact(i));
                        Datos[4]=String.valueOf(f1.getCostoFact(i));
                        
                        double cost=f1.getCostoFact(i);
                        suma=suma+cost;
                        lblIVA.setText(String.valueOf((suma*0.13)));
                        lblSubtotal.setText(String.valueOf(suma));
                        lblTotal.setText(String.valueOf(suma+(suma*0.13)));
                        
                        
                        
                        tablita.addRow(Datos);
                        TablaDetalle.setModel(tablita);
                        
                    }
                }
        
        
    }//GEN-LAST:event_TablaDetalleMouseClicked

    private void btnBuscarFacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFacActionPerformed
        String NumF=txtNoFactura.getText().toString();
        int f=Integer.parseInt(NumF);
        if(txtNoFactura.isEnabled()==false)
        {
            txtNoFactura.enable(true);
            txtNoFactura.requestFocus();
            
        }
        else if(NumF.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar Un Numero de factura para buscarla");
        }
        else if (f>f1.cantidadFacturas()) {
             JOptionPane.showMessageDialog(rootPane, "El número De Factura Digitado No Existe...");
             txtNoFactura.setText("");
             txtNoFactura.requestFocus();
        }
        else
        {
            btnAgregarProd.setEnabled(false);
            btnBuscarVen.setEnabled(false);
            btnGuardarFac.setEnabled(false);
            txtProducto.setEnabled(false);
            
            int nf=f1.cantidadFacturas();
            for(int i=0;i<nf;i++)
            {
                String nfac= f1.getFactura(i);
                if(f1.getFactura(i).equals(String.valueOf(f)))
                {
                    txtNombreClie.setText(f1.getClienteFact(i));
                    int idcli=f1.idCliente(txtNombreClie.getText());
                    txtCliente.setText(f1.CodCliente(idcli));
                    
                    txtNombreVendedor.setText(f1.getVendedorFact(i));
                    int idven= f1.idVendedor(txtNombreVendedor.getText());
                    txtVendedor.setText(f1.CodVendedor(idven));
                    
                    
                }
                        
            }
            
                tablita.setRowCount(0);
                double suma=0;
                int can=f1.cantidadDetalles();
                String Datos[]= new String[5];
                for(int i=0;i<can;i++)
                {
                     
                    //String hg=f1.getIdDetalleFact(i);
                    if(f1.getIdDetalleFact(i).equals(String.valueOf(f)))
                    {
                        Datos[0]=f1.getCodProdFact(i);
                        Datos[1]=f1.getNombreProFact(i);
                        Datos[2]=String.valueOf(f1.getPrecioUnitarioFact(i));
                        Datos[3]=String.valueOf(f1.getCantProFact(i));
                        Datos[4]=String.valueOf(f1.getCostoFact(i));
                        
                        double cost=f1.getCostoFact(i);
                        suma=suma+cost;
                        lblIVA.setText(String.valueOf((suma*0.13)));
                        lblSubtotal.setText(String.valueOf(suma));
                        lblTotal.setText(String.valueOf(suma+(suma*0.13)));
                        
                        
                        
                        tablita.addRow(Datos);
                        TablaDetalle.setModel(tablita);
                        
                    }
                }
            
            
        }
                
  
        
    }//GEN-LAST:event_btnBuscarFacActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Factura().setVisible(true);
            }
        });
    }
    
    public void agregarRegistro(){
        String nombreProducto = txtNombreProduc.getText();
        String codProducto = txtProducto.getText();
        String cantidadProducto = txtCantidades.getText();
        String precioUnitario = txtPrecio.getText();
        Double costoProducto = Double.parseDouble(cantidadProducto)*Double.parseDouble(precioUnitario);
        
        Object [] fila = {codProducto,nombreProducto,precioUnitario,cantidadProducto,costoProducto};
        
        tablita.addRow(fila);
        TablaDetalle.setModel(tablita);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaDetalle;
    private javax.swing.JButton btnAgregarProd;
    private javax.swing.JButton btnBuscarClie;
    private javax.swing.JButton btnBuscarFac;
    private javax.swing.JButton btnBuscarProd;
    private javax.swing.JButton btnBuscarVen;
    private javax.swing.JButton btnGuardarFac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIVA;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField txtCantidades;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtNoFactura;
    private javax.swing.JTextField txtNombreClie;
    private javax.swing.JTextField txtNombreProduc;
    private javax.swing.JTextField txtNombreVendedor;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtUnidades;
    private javax.swing.JTextField txtVendedor;
    // End of variables declaration//GEN-END:variables
}
